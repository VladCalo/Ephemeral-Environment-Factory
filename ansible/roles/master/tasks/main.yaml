---
- name: Initialize Kubernetes control plane
  command: >
    kubeadm init --pod-network-cidr=10.244.0.0/16
  args:
    creates: /etc/kubernetes/admin.conf
  register: kubeadm_init
  ignore_errors: false

- name: Save kubeadm join command for workers
  shell: |
    kubeadm token create --print-join-command
  register: join_command
  changed_when: false

- name: Copy kubeconfig to regular user
  shell: |
    mkdir -p /home/{{ ansible_user | default('ubuntu') }}/.kube &&
    cp /etc/kubernetes/admin.conf /home/{{ ansible_user | default('ubuntu') }}/.kube/config &&
    chown {{ ansible_user | default('ubuntu') }}:{{ ansible_user | default('ubuntu') }} /home/{{ ansible_user | default('ubuntu') }}/.kube/config
  args:
    creates: "/home/{{ ansible_user | default('ubuntu') }}/.kube/config"

- name: Apply Flannel CNI
  shell: |
    kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  args:
    creates: /etc/cni/net.d/10-flannel.conflist

- name: Create argocd namespace
  kubernetes.core.k8s:
    api_version: v1
    kind: Namespace
    name: argocd
    state: present
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf

- name: Install ArgoCD
  shell: |
    kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf
  args:
    creates: /etc/kubernetes/argocd_installed

- name: Apply ArgoCD Application for NGINX
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('file', 'files/nginx-app.yaml') }}"
  environment:
    KUBECONFIG: /etc/kubernetes/admin.conf


