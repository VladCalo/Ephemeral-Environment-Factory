---
- name: Update apt cache and upgrade packages
  apt:
    update_cache: yes
    upgrade: dist
  retries: 3
  delay: 10

- name: Install prerequisites
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present
  retries: 3
  delay: 10

- name: Install Docker using official convenience script (handles any architecture)
  shell: curl -fsSL https://get.docker.com | sh
  args:
    creates: /usr/bin/docker
  retries: 3
  delay: 15
  register: docker_install
  failed_when: docker_install.rc != 0 and not docker_install.stdout

- name: Start and enable Docker
  service:
    name: docker
    enabled: yes
    state: started
  retries: 3
  delay: 5

- name: Add user to docker group
  user:
    name: "{{ ansible_user | default('ubuntu') }}"
    groups: docker
    append: yes

- name: Remove existing containerd config
  file:
    path: /etc/containerd/config.toml
    state: absent

- name: Generate default containerd config
  shell: containerd config default
  register: containerd_config
  retries: 2
  delay: 5

- name: Set SystemdCgroup = true in containerd config
  set_fact:
    containerd_config_updated: "{{ containerd_config.stdout | regex_replace('SystemdCgroup = false', 'SystemdCgroup = true') }}"

- name: Write containerd config
  copy:
    dest: /etc/containerd/config.toml
    content: "{{ containerd_config_updated }}"

- name: Restart and enable containerd
  service:
    name: containerd
    enabled: yes
    state: restarted
  retries: 3
  delay: 5

- name: Add Kubernetes GPG key
  ansible.builtin.apt_key:
    url: https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key
    state: present
  retries: 3
  delay: 10

- name: Add Kubernetes APT repository
  ansible.builtin.apt_repository:
    repo: "deb https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /"
    state: present
    filename: kubernetes
  retries: 3
  delay: 10

- name: Install Kubernetes components
  apt:
    name:
      - kubelet
      - kubeadm
      - kubectl
    state: present
    update_cache: yes
  retries: 3
  delay: 30
  register: k8s_install
  until: k8s_install is not failed

- name: Hold Kubernetes packages
  ansible.builtin.dpkg_selections:
    name: "{{ item }}"
    selection: hold
  loop:
    - kubelet
    - kubeadm
    - kubectl
  retries: 2
  delay: 5

- name: Enable kubelet service
  service:
    name: kubelet
    enabled: yes

- name: Disable swap
  shell: swapoff -a
  retries: 2
  delay: 5

- name: Comment swap entries in fstab
  replace:
    path: /etc/fstab
    regexp: "^([^#].* swap .*)$"
    replace: '# \1'

- name: Load required kernel modules
  copy:
    dest: /etc/modules-load.d/k8s.conf
    content: |
      overlay
      br_netfilter

- name: Ensure overlay module is loaded
  modprobe:
    name: overlay
    state: present
  retries: 2
  delay: 5

- name: Ensure br_netfilter module is loaded
  modprobe:
    name: br_netfilter
    state: present
  retries: 2
  delay: 5

- name: Set sysctl parameters for Kubernetes networking
  copy:
    dest: /etc/sysctl.d/k8s.conf
    content: |
      net.bridge.bridge-nf-call-iptables = 1
      net.bridge.bridge-nf-call-ip6tables = 1
      net.ipv4.ip_forward = 1

- name: Apply sysctl parameters
  command: sysctl --system
  retries: 2
  delay: 5

- name: Run Node Exporter container
  community.docker.docker_container:
    name: node-exporter
    image: prom/node-exporter:latest
    ports:
      - "9100:9100"
    restart_policy: always
    state: started
